// IMPLEMENTATION OF LINKED LIST
#include<iostream>
using namespace std;
class node{
    public: 
    int data;
    node* next;
    node(int data){
        this->data=data;
        this->next=NULL;

    }
};

// INSERTION OF HEAD
void insertathead(node* &head,int d){
    node* temp=new node(d);
    temp->next=head;
    head=temp;
}
void print(node* &head){
    node* temp=head;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp=temp->next;
    }
    cout<<endl;
}

// INSERTION AT TAIL:-
void insertattail(node* &tail,int d){
    node*temp=new node(d);
    tail->next=temp;
    tail=temp;

}

// INSERTION AT POSITION
void insertatposition(node* &tail, node* &head,int position,int d){
    // insertion at start
    if(position==1){
        insertathead(head,d);
        return;
    }
    node* temp=head;
    int cnt=1;
    while(cnt<position-1){
        temp=temp->next;
        cnt++;
    }
    // inserting at last position
    if(temp->next=NULL){
        insertattail(tail,d);
        return;
    }
    //creating a node for d
    node* nodeToInsert = new node(d);
    nodeToInsert -> next = temp -> next;
    temp -> next = nodeToInsert;

}
int main(){
    node* node1=new node(10);
    // cout<<node1->data<<endl;
    // cout<<node1->next<<endl;
    node* head=node1;
    node* tail=node1;
    print(head);
    insertattail(tail,12);
    print(head);
    insertattail(tail,15);
    print(head);
    insertatposition(tail,head,44,22);
    print(head);
    return 0;
}


